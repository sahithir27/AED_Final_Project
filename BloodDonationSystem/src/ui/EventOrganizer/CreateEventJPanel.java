/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.EventOrganizer;

import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.EcoSystem;
import model.Enterprise.Enterprise;
import model.Network.Network;
import model.Organization.MedicalAwarnessCampaign;
import model.Organization.Organization;
import model.Organization.PoliciesFinance;
import model.Users.Users;
import model.WorkQueue.EventWorkRequest;
import model.WorkQueue.WorkQueue;

/**
 *
 * @author Admin
 */
public class CreateEventJPanel extends javax.swing.JPanel {
    private Enterprise enterprise;
    private Users userAccount;
    private EcoSystem ecoSystem;
    private JPanel userProcessContainer;
    private MedicalAwarnessCampaign medicalAwarnessCampaign;
    
    

    /**
     * Creates new form CreateEventJPanel
     */
    public CreateEventJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCreateEvents = new javax.swing.JLabel();
        tfMinutes = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        btnCreateEvent = new javax.swing.JButton();
        tfEventName = new javax.swing.JTextField();
        tfComments = new javax.swing.JTextField();
        tfHours = new javax.swing.JTextField();
        tfAmountRequired = new javax.swing.JTextField();
        lblTime = new javax.swing.JLabel();
        lblVenue = new javax.swing.JLabel();
        tfVenue = new javax.swing.JTextField();
        lblAmount = new javax.swing.JLabel();
        lblComments = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblEventName = new javax.swing.JLabel();
        tfDate = new com.toedter.calendar.JDateChooser();

        lblCreateEvents.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblCreateEvents.setForeground(new java.awt.Color(255, 0, 51));
        lblCreateEvents.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateEvents.setText("CREATE EVENTS");

        tfMinutes.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        tfMinutes.setText("MM");

        btnBack.setBackground(new java.awt.Color(255, 0, 51));
        btnBack.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnCreateEvent.setBackground(new java.awt.Color(255, 0, 51));
        btnCreateEvent.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnCreateEvent.setForeground(new java.awt.Color(255, 255, 255));
        btnCreateEvent.setText("Create Event");
        btnCreateEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateEventActionPerformed(evt);
            }
        });

        tfEventName.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N

        tfHours.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        tfHours.setText("HH");

        lblTime.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        lblTime.setForeground(new java.awt.Color(255, 0, 51));
        lblTime.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblTime.setText("Time:");

        lblVenue.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        lblVenue.setForeground(new java.awt.Color(255, 0, 51));
        lblVenue.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblVenue.setText("Venue:");

        tfVenue.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        tfVenue.setText(" ");
        tfVenue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfVenueActionPerformed(evt);
            }
        });

        lblAmount.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        lblAmount.setForeground(new java.awt.Color(255, 0, 51));
        lblAmount.setText("Amount Required:");

        lblComments.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        lblComments.setForeground(new java.awt.Color(255, 0, 51));
        lblComments.setText("Comments: ");

        lblDate.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 0, 51));
        lblDate.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblDate.setText("Date:");

        lblEventName.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        lblEventName.setForeground(new java.awt.Color(255, 0, 51));
        lblEventName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblEventName.setText("Event Name:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(btnBack)
                        .addGap(56, 56, 56)
                        .addComponent(lblCreateEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(lblAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tfAmountRequired, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblVenue, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(248, 248, 248)
                                            .addComponent(lblEventName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblTime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(lblComments, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfEventName, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                .addComponent(tfVenue, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfHours, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(tfMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(tfComments, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(tfDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(353, 353, 353)
                        .addComponent(btnCreateEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(225, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCreateEvents)
                    .addComponent(btnBack))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEventName)
                    .addComponent(tfEventName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfVenue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblVenue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblDate)
                    .addComponent(tfDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTime)
                    .addComponent(tfHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblComments)
                    .addComponent(tfComments, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAmount)
                    .addComponent(tfAmountRequired, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(btnCreateEvent)
                .addContainerGap(203, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        EventOrganizerWorkAreaJPanel eventOrgWorkArea = (EventOrganizerWorkAreaJPanel ) component;
        eventOrgWorkArea.populateRequestTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCreateEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateEventActionPerformed
        // TODO add your handling code here:
        String message = tfEventName.getText();
        String venue = tfVenue.getText();
        Date d = (tfDate.getDate());
        Date today = new Date();
        String t = tfHours.getText()+":"+tfMinutes.getText();
        EventWorkRequest request = new EventWorkRequest();
        request = (EventWorkRequest) request;
        request.setMessage(message);
        request.setEventVenue(venue);
        request.setEventDate(d);
        request.setEventTime(t);
        request.setStatus("Request Submitted");

        if(message.equals("")){
            JOptionPane.showMessageDialog(null, "Event Name can't be empty");
            return;
        }

        if(venue.equals("")){
            JOptionPane.showMessageDialog(null, "Venue can't be empty");
            return;
        }

        if (!d.after(today)) {
            JOptionPane.showMessageDialog(null, "Please select a proper date");
            return;
        }

        int hrs=0;
        int min=0;
        try{
            hrs = Integer.parseInt(tfHours.getText());
            min = Integer.parseInt(tfMinutes.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Please enter only numbers");
            return;
        }
        if(hrs<0 || hrs >=24){
            JOptionPane.showMessageDialog(null, "Hours Should be between 0-23");
            return;
        }
        if(min<0 || min >=60){
            JOptionPane.showMessageDialog(null, "Minutes Should be between 0-60");
            return;
        }

        request.setSender(userAccount);
        request.setMessage(message);
        request.setComment(tfComments.getText());
        request.setAmount(tfAmountRequired.getText());
        if(userAccount.getWorkQueue()==null){
            WorkQueue wq = new WorkQueue();
            userAccount.setWorkQueue(wq);
        }
        userAccount.getWorkQueue().getWorkRequestList().add(request);
        Organization org = null;
        for(Network network:ecoSystem.getNetworkList()){
            for(Enterprise enterprise:network.getListOfEnterprises().getEnterpriseList()){
                for(Organization organization:enterprise.getLisOfOrganizations().getOrganizationList()){

                    if(organization instanceof PoliciesFinance){

                        for (Users ua :organization.getListOfUsers().getAccountList()){

                            if(organization instanceof PoliciesFinance){

                                if(ua.getWorkQueue()== null){
                                    WorkQueue wq = new WorkQueue();
                                    ua.setWorkQueue(wq);}

                                ua.getWorkQueue().getWorkRequestList().add(request);
                                request.setReceiver(ua);
                                break;} }
                        if (organization instanceof MedicalAwarnessCampaign) {

                            org= organization;
                            break;
                        }
                    }

                }
            }
        }
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        EventOrganizerWorkAreaJPanel eowajp = (EventOrganizerWorkAreaJPanel ) component;
        eowajp.populateRequestTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnCreateEventActionPerformed

    private void tfVenueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfVenueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfVenueActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateEvent;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JLabel lblComments;
    private javax.swing.JLabel lblCreateEvents;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblEventName;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblVenue;
    private javax.swing.JTextField tfAmountRequired;
    private javax.swing.JTextField tfComments;
    private com.toedter.calendar.JDateChooser tfDate;
    private javax.swing.JTextField tfEventName;
    private javax.swing.JTextField tfHours;
    private javax.swing.JTextField tfMinutes;
    private javax.swing.JTextField tfVenue;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Admin;

import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.EcoSystem;
import model.Employee.Employee;
import model.Enterprise.Enterprise;
import model.Organization.Organization;
import model.Organization.OrganizationDirectory;
import model.Person.Patients;

/**
 *
 * @author varshareddykumbham
 */
public class PatientsJPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    OrganizationDirectory organizationDirectory; 
    Enterprise enterprise;
    EcoSystem ecoSystem;
    /**
     * Creates new form PatientsJPanel
     */
    
    public PatientsJPanel(JPanel userProcessContainer, OrganizationDirectory organizationDirectory, Enterprise enterprise,EcoSystem ecoSystem) {
        this.userProcessContainer=userProcessContainer;
        this.organizationDirectory=organizationDirectory;
        this.enterprise=enterprise;
        this.ecoSystem=ecoSystem;
        
        initComponents();
        populateDepartmentCB();
        tfPatientID.setText(""+this.ecoSystem.getPatientId());      
    }
    
    public void populateDepartmentCB(){
        cbDepartment.addItem("--Select--");
        for(Organization org: organizationDirectory.getOrganizationList()){
            System.out.println("Specialization");
            System.out.println(org.getOrganizationType().getValue());
            if(org.getOrganizationType().getValue().equalsIgnoreCase("medical care")){
                cbDepartment.addItem(org.getOrganizationName());
            }
        }
    }
    
    public void PatientCount(String doctor){
        int counter=0;
        for(Organization org: organizationDirectory.getOrganizationList()){
            if(org.getOrganizationType().getValue().equalsIgnoreCase("medical care")){
                for(Patients p: org.getListOfPatients().getLofPatient()){
                    if(p.isIsAlive()&&p.getDoctor().equalsIgnoreCase(doctor)){
                        counter++;
                    }
                }
            }
        }
        lblPatientCount.setText(""+counter+" Patients are in queue");
    
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPatientDetails = new javax.swing.JLabel();
        lblPatientID = new javax.swing.JLabel();
        lblPatientName = new javax.swing.JLabel();
        lblPatientAge = new javax.swing.JLabel();
        lblPatientSpeciality = new javax.swing.JLabel();
        lblDoctor = new javax.swing.JLabel();
        tfPatientID = new javax.swing.JTextField();
        tfPatientName = new javax.swing.JTextField();
        tfPatientAge = new javax.swing.JTextField();
        cbDepartment = new javax.swing.JComboBox<>();
        cbDoctor = new javax.swing.JComboBox<>();
        lblContact = new javax.swing.JLabel();
        tfContact = new javax.swing.JTextField();
        btnSavePatient = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblSex = new javax.swing.JLabel();
        cbSex = new javax.swing.JComboBox<>();
        lblPatientCount = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        lblPatientDetails.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        lblPatientDetails.setForeground(new java.awt.Color(0, 183, 210));
        lblPatientDetails.setText("Patient Details");

        lblPatientID.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        lblPatientID.setText("Patient ID :");

        lblPatientName.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        lblPatientName.setText("Name :");

        lblPatientAge.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        lblPatientAge.setText("Age :");

        lblPatientSpeciality.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        lblPatientSpeciality.setText("Speciality :");

        lblDoctor.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        lblDoctor.setText("Doctor :");

        cbDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDepartmentActionPerformed(evt);
            }
        });

        cbDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDoctorActionPerformed(evt);
            }
        });

        lblContact.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        lblContact.setText("Phone Number :");

        btnSavePatient.setBackground(new java.awt.Color(0, 183, 210));
        btnSavePatient.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnSavePatient.setForeground(new java.awt.Color(255, 255, 255));
        btnSavePatient.setText("Submit");
        btnSavePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavePatientActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 183, 210));
        btnBack.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblSex.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        lblSex.setText("Sex :");

        cbSex.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--", "Male", "Female", "Others" }));

        lblPatientCount.setBackground(new java.awt.Color(255, 51, 0));
        lblPatientCount.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        lblPatientCount.setForeground(new java.awt.Color(255, 51, 51));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Patient/Patient.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(lblPatientDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(409, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(54, 54, 54))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addComponent(lblPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(22, 22, 22)
                                        .addComponent(tfPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(56, 56, 56)
                                        .addComponent(lblPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(tfPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(74, 74, 74)
                                        .addComponent(lblSex, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(20, 20, 20)
                                        .addComponent(cbSex, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblContact, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(24, 24, 24)
                                        .addComponent(tfContact, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(55, 55, 55)
                                        .addComponent(lblDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(19, 19, 19)
                                        .addComponent(cbDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(lblPatientSpeciality, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(24, 24, 24)
                                        .addComponent(cbDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(74, 74, 74)
                                        .addComponent(lblPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(20, 20, 20)
                                        .addComponent(tfPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(31, 31, 31))
                            .addComponent(lblPatientCount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnBack)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(139, 139, 139)
                            .addComponent(btnSavePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(536, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPatientDetails)
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addContainerGap(126, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(4, 4, 4)
                            .addComponent(lblPatientID))
                        .addComponent(tfPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addComponent(lblPatientName))
                        .addComponent(tfPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(4, 4, 4)
                            .addComponent(lblPatientAge))
                        .addComponent(tfPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(12, 12, 12)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(4, 4, 4)
                            .addComponent(lblSex))
                        .addComponent(cbSex, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(6, 6, 6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(4, 4, 4)
                            .addComponent(lblContact))
                        .addComponent(tfContact, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(4, 4, 4)
                            .addComponent(lblPatientSpeciality))
                        .addComponent(cbDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(4, 4, 4)
                            .addComponent(lblDoctor))
                        .addComponent(cbDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(lblPatientCount, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(btnSavePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(132, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDepartmentActionPerformed
        // TODO add your handling code here:
        cbDoctor.removeAllItems();
        cbDoctor.addItem("--Select--");
        int counter=0;
        for(int i=0;i<organizationDirectory.getOrganizationList().size();i++){
            Organization org=organizationDirectory.getOrganizationList().get(i);
            if(cbDepartment.getSelectedItem().toString().equalsIgnoreCase(org.getOrganizationName())){
                for(int j=0;j<org.getListOfUsers().getAccountList().size();j++){
                    Employee emp=org.getListOfUsers().getAccountList().get(j).getEmployee();
                    cbDoctor.addItem(emp.getEmployeeName());
                    counter++;
                }
            }
        }
        if(counter==0){
            cbDoctor.removeAllItems();
            cbDoctor.addItem("No Doctors");
        }
    }//GEN-LAST:event_cbDepartmentActionPerformed

    private void cbDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDoctorActionPerformed
        // TODO add your handling code here:
        if(cbDoctor.getSelectedIndex()>0){
            String doc=cbDoctor.getSelectedItem().toString();
            PatientCount(doc);
        }

    }//GEN-LAST:event_cbDoctorActionPerformed

    private void btnSavePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePatientActionPerformed
        // TODO add your handling code here:
        if(tfPatientName.getText().isEmpty() || tfPatientAge.getText().isEmpty() || tfContact.getText().isEmpty() ||
            cbDepartment.getSelectedIndex()==0||cbDoctor.getSelectedIndex()==0) {
            JOptionPane.showMessageDialog(null, "Please provide details in all fields");
            return;
        }
        //firstname and last name
        boolean check ;
        check = tfPatientName.getText().matches("^[a-zA-Z]+$");

        if(check == false) {
            JOptionPane.showMessageDialog(null, "First name not valid");
            return;
        }

        //Phone Number

        if(tfContact.getText().length() != 10) {
            JOptionPane.showMessageDialog(null, "PhoneNumber must be of 10 digits");
            return;
        }
        check = tfContact.getText().matches("^[0-9]+$");
        if(!check) {
            JOptionPane.showMessageDialog(null, "Phone Number must have digits only");
            return;
        }

        //Age
        check=tfPatientAge.getText().matches("^[1-9][0-9]?$");
        if(!check){
            JOptionPane.showMessageDialog(null, "Age not valid");
            return;
        }

        check=cbSex.getSelectedIndex()>0;
        if(!check){
            JOptionPane.showMessageDialog(null, "Gender is required");
            return;
        }

        ArrayList<String> organs=new ArrayList<>();
        ArrayList<String> testData=new ArrayList<>();
        for(int i=0;i<organizationDirectory.getOrganizationList().size();i++){
            if(organizationDirectory.getOrganizationList().get(i).getOrganizationName().equalsIgnoreCase(cbDepartment.getSelectedItem().toString())){
                Organization organization=organizationDirectory.getOrganizationList().get(i);
                organization.getListOfPatients().createPatient(ecoSystem.getPatientId(),tfPatientName.getText(),tfPatientAge.getText(),cbSex.getSelectedItem().toString(),tfContact.getText(),cbDepartment.getSelectedItem().toString(),cbDoctor.getSelectedItem().toString(),true,true,true,organs,testData);
                ecoSystem.incrementPatientId();
                break;
            }
        }
        JOptionPane.showMessageDialog(null, "Appointment Confirmed..");
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_btnSavePatientActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSavePatient;
    private javax.swing.JComboBox<String> cbDepartment;
    private javax.swing.JComboBox<String> cbDoctor;
    private javax.swing.JComboBox<String> cbSex;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblDoctor;
    private javax.swing.JLabel lblPatientAge;
    private javax.swing.JLabel lblPatientCount;
    private javax.swing.JLabel lblPatientDetails;
    private javax.swing.JLabel lblPatientID;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPatientSpeciality;
    private javax.swing.JLabel lblSex;
    private javax.swing.JTextField tfContact;
    private javax.swing.JTextField tfPatientAge;
    private javax.swing.JTextField tfPatientID;
    private javax.swing.JTextField tfPatientName;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Physicist;

import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.WorkQueue.DiagnosticsWorkRequest;

/**
 *
 * @author Admin
 */
public class ProcessDiagnosticJPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    DiagnosticsWorkRequest request;
    private String others;
    /**
     * Creates new form ProcessDiagnosticJPanel
     */
     public ProcessDiagnosticJPanel(JPanel userProcessContainer, DiagnosticsWorkRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        load_lables();

    }

    public void load_lables() {
        tfBloodtyping.setVisible(false);
        cbBloodTyping.setVisible(false);
        tfSurvival.setVisible(false);
        cbSurvivalCapability.setVisible(false);
        tfAntibodies.setVisible(false);
        cbReactiveAntibodies.setVisible(false);
        lblWbcCount.setVisible(false);
        cbWhiteBloodCells.setVisible(false);
        tfRandom1.setVisible(false);
        cbRandomOne.setVisible(false);
        tfRandom2.setVisible(false);
        cbRandomTwo.setVisible(false);
        tfRandom3.setVisible(false);
        cbRandomThree.setVisible(false);
        
        List<JLabel> labels = Arrays.asList(tfRandom1, tfRandom2, tfRandom3);
        List<JComboBox> cboxes = Arrays.asList(cbRandomOne, cbRandomTwo, cbRandomThree);
        int counter=0;
        
        
        for (String s : request.getTests()) {          
            
            if (s.equalsIgnoreCase("blood typing")) {
                tfBloodtyping.setVisible(true);
                cbBloodTyping.setVisible(true);    
            }
            if (s.equalsIgnoreCase("survival capability")) {
                tfSurvival.setVisible(true);
                cbSurvivalCapability.setVisible(true);
            }
            if (s.equalsIgnoreCase("reactive antibodies")) {
                tfAntibodies.setVisible(true);
                cbReactiveAntibodies.setVisible(true);
            }
            if (s.equalsIgnoreCase("wbc count")) {
                lblWbcCount.setVisible(true);
                cbWhiteBloodCells.setVisible(true);
            }      
            
            if (!(s.equalsIgnoreCase("wbc count")||s.equalsIgnoreCase("blood typing") || s.equalsIgnoreCase("survival capability") || s.equalsIgnoreCase("reactive antibodies"))) {
                labels.get(counter).setVisible(true);
                labels.get(counter).setText(s);
                cboxes.get(counter).setVisible(true);
                counter++;

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblLabTest = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        tfBloodtyping = new javax.swing.JLabel();
        cbBloodTyping = new javax.swing.JComboBox();
        cbSurvivalCapability = new javax.swing.JComboBox();
        tfSurvival = new javax.swing.JLabel();
        tfAntibodies = new javax.swing.JLabel();
        cbReactiveAntibodies = new javax.swing.JComboBox();
        cbWhiteBloodCells = new javax.swing.JComboBox<>();
        lblWbcCount = new javax.swing.JLabel();
        tfRandom1 = new javax.swing.JLabel();
        cbRandomOne = new javax.swing.JComboBox();
        cbRandomTwo = new javax.swing.JComboBox();
        tfRandom2 = new javax.swing.JLabel();
        tfRandom3 = new javax.swing.JLabel();
        cbRandomThree = new javax.swing.JComboBox();
        tfResult = new javax.swing.JLabel();
        tfResultCommentVal = new javax.swing.JTextField();
        btnGenerateResult = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        lblLabTest.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblLabTest.setForeground(new java.awt.Color(0, 183, 210));
        lblLabTest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLabTest.setText("LAB TESTS");

        btnBack.setBackground(new java.awt.Color(0, 183, 210));
        btnBack.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tfBloodtyping.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        tfBloodtyping.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        tfBloodtyping.setText("Blood Typing");

        cbBloodTyping.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        cbBloodTyping.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Normal ", "Abnormal", " " }));

        cbSurvivalCapability.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        cbSurvivalCapability.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Normal ", "Abnormal", " " }));
        cbSurvivalCapability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSurvivalCapabilityActionPerformed(evt);
            }
        });

        tfSurvival.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        tfSurvival.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        tfSurvival.setText("Survival Capability");

        tfAntibodies.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        tfAntibodies.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        tfAntibodies.setText("Reactive Antibodies");

        cbReactiveAntibodies.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        cbReactiveAntibodies.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "10%-20%", "20%-40%", "40%-60%", "60%-80%", ">80%", " " }));
        cbReactiveAntibodies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbReactiveAntibodiesActionPerformed(evt);
            }
        });

        cbWhiteBloodCells.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Normal ", "Abnormal" }));

        lblWbcCount.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        lblWbcCount.setText("WBC Count");

        tfRandom1.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        tfRandom1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        tfRandom1.setText("Random:");

        cbRandomOne.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        cbRandomOne.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Normal ", "Abnormal", " " }));
        cbRandomOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRandomOneActionPerformed(evt);
            }
        });

        cbRandomTwo.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        cbRandomTwo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Normal ", "Abnormal", " " }));
        cbRandomTwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRandomTwoActionPerformed(evt);
            }
        });

        tfRandom2.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        tfRandom2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        tfRandom2.setText("Random:");

        tfRandom3.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        tfRandom3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        tfRandom3.setText("Random:");

        cbRandomThree.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        cbRandomThree.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Normal ", "Abnormal", " " }));
        cbRandomThree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRandomThreeActionPerformed(evt);
            }
        });

        tfResult.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        tfResult.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        tfResult.setText("Result:");

        tfResultCommentVal.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N

        btnGenerateResult.setBackground(new java.awt.Color(0, 183, 210));
        btnGenerateResult.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnGenerateResult.setForeground(new java.awt.Color(255, 255, 255));
        btnGenerateResult.setText("Generate Result");
        btnGenerateResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateResultActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Diagnostics/labtest.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfResult)
                            .addComponent(tfAntibodies)
                            .addComponent(tfSurvival)
                            .addComponent(tfBloodtyping)
                            .addComponent(lblWbcCount)
                            .addComponent(tfRandom1)
                            .addComponent(tfRandom2)
                            .addComponent(tfRandom3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfResultCommentVal, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbWhiteBloodCells, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbReactiveAntibodies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbSurvivalCapability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbBloodTyping, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbRandomOne, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbRandomTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(130, 130, 130))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbRandomThree, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBack)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(btnGenerateResult, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(96, 96, 96)
                    .addComponent(lblLabTest, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(17, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfBloodtyping)
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbSurvivalCapability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfSurvival))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tfAntibodies)
                                    .addComponent(cbReactiveAntibodies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblWbcCount)
                                    .addComponent(cbWhiteBloodCells, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(cbBloodTyping, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbRandomOne, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfRandom1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbRandomTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfRandom2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbRandomThree, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfRandom3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfResultCommentVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfResult))))
                .addGap(18, 18, 18)
                .addComponent(btnGenerateResult, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblLabTest)
                    .addContainerGap(511, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DiagnosticsJPanel dwjp = (DiagnosticsJPanel) component;
        dwjp.load_work_tbl();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cbSurvivalCapabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSurvivalCapabilityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSurvivalCapabilityActionPerformed

    private void cbReactiveAntibodiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbReactiveAntibodiesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbReactiveAntibodiesActionPerformed

    private void cbRandomOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRandomOneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbRandomOneActionPerformed

    private void cbRandomTwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRandomTwoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbRandomTwoActionPerformed

    private void cbRandomThreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRandomThreeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbRandomThreeActionPerformed

    private void btnGenerateResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateResultActionPerformed
        request.setTestResult(tfResultCommentVal.getText());
        String test1 = cbBloodTyping.getSelectedItem().toString();
        String test2 = cbSurvivalCapability.getSelectedItem().toString();
        String test3 = cbReactiveAntibodies.getSelectedItem().toString();
        String test4 = cbWhiteBloodCells.getSelectedItem().toString();
        String test5 = cbRandomOne.getSelectedItem().toString();
        String test6 = cbRandomTwo.getSelectedItem().toString();
        String test7 = cbRandomThree.getSelectedItem().toString();

        ArrayList<String> sample= new ArrayList<>();
        //Blff Typing, Survival, Reactive antibodies// random//comments
        if(!(test1=="-"||test1.isBlank()||test1.isEmpty())){
            sample.add(test1);
        }
        if(!(test2=="-"||test2.isBlank()||test2.isEmpty())){
            sample.add(test2);
        }
        if(!(test3=="-"||test3.isBlank()||test3.isEmpty())){
            sample.add(test3);
        }
        if(!(test4=="-"||test4.isBlank()||test4.isEmpty())){
            sample.add(test4);
        }
        if(!(test5=="-"||test5.isBlank()||test5.isEmpty())){
            sample.add(test5);
        }
        if(!(test6=="-"||test6.isBlank()||test6.isEmpty())){
            sample.add(test6);
        }
        if(!(test7=="-"||test7.isBlank()||test7.isEmpty())){
            sample.add(test7);
        }

        boolean check;
        check=sample.size()>0;
        if(!check){
            JOptionPane.showMessageDialog(null, "Please perform the tests for proper evaluation");
            return;
        }
        request.setTestData(sample);
        request.setStatus("Completed");
        JOptionPane.showMessageDialog(null,"Report has been sent");
        System.out.println(request.getTestData()+"This is test data");

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DiagnosticsJPanel dwjp = (DiagnosticsJPanel) component;
        dwjp.load_work_tbl();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnGenerateResultActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnGenerateResult;
    private javax.swing.JComboBox cbBloodTyping;
    private javax.swing.JComboBox cbRandomOne;
    private javax.swing.JComboBox cbRandomThree;
    private javax.swing.JComboBox cbRandomTwo;
    private javax.swing.JComboBox cbReactiveAntibodies;
    private javax.swing.JComboBox cbSurvivalCapability;
    private javax.swing.JComboBox<String> cbWhiteBloodCells;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblLabTest;
    private javax.swing.JLabel lblWbcCount;
    private javax.swing.JLabel tfAntibodies;
    private javax.swing.JLabel tfBloodtyping;
    private javax.swing.JLabel tfRandom1;
    private javax.swing.JLabel tfRandom2;
    private javax.swing.JLabel tfRandom3;
    private javax.swing.JLabel tfResult;
    private javax.swing.JTextField tfResultCommentVal;
    private javax.swing.JLabel tfSurvival;
    // End of variables declaration//GEN-END:variables
}
